version: "3.8"

networks:
  my-network:
    driver: bridge

services:
  #################################
  # The User microservice
  #################################
  user:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: always
    environment:
      - DB_HOST=db_user
      - DB_PORT=5432
      - DB_NAME=user_db
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DOCKER_ENV=true
    depends_on:
      - db_user
    networks:
      - my-network

  #################################
  # The Chat microservice
  #################################
  chat:
    build:
      context: ./services/chat
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    restart: always
    environment:
      - DB_HOST=db_chat
      - DB_PORT=5432
      - DB_NAME=chat_db
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DOCKER_ENV=true
    depends_on:
      - db_chat
    networks:
      - my-network

  #################################
  # PostgreSQL for User microservice
  #################################
  db_user:
    image: postgres:13
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5433:5432"
    networks:
      - my-network
    volumes:
      - ./services/user/src/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - db_user_data:/var/lib/postgresql/data
    restart: always

  #################################
  # PostgreSQL for Chat microservice
  #################################
  db_chat:
    image: postgres:13
    environment:
      POSTGRES_DB: chat_db
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5434:5432"
    networks:
      - my-network
    volumes:
      - ./services/chat/src/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - db_chat_data:/var/lib/postgresql/data
    restart: always

volumes:
  db_user_data:
  db_chat_data:
